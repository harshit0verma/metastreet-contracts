{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
      "txHash": "0x3898f10cfe65321886a147e06da36538ed8fbb4d14b2accf96f3c482a0348191",
      "kind": "beacon"
    },
    {
      "address": "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
      "txHash": "0x5af1c097a8b968f1b97cb3a40af546045a22228307983a3d998cb0248fd2e5d2",
      "kind": "beacon"
    },
    {
      "address": "0xA51c1fc2f0D1a1b8494Ed1FE312d7C3a78Ed91C0",
      "txHash": "0x707ace0abbc98824e31b48a53073ff719a76d3cb17a7efe98190d3311738f95c",
      "kind": "beacon"
    },
    {
      "address": "0xE6E340D132b5f46d1e472DebcD681B2aBc16e57E",
      "txHash": "0xbbd2b2adfcfe128e67ceb16ebf7e2e6fa71cc662c561e9c617c8195c2521a7b4",
      "kind": "beacon"
    },
    {
      "address": "0x0E801D84Fa97b50751Dbf25036d067dCf18858bF",
      "txHash": "0xf7e983862f562ef600ed6b5c46cd7860fe687526b136e3b58d71273f37f86702",
      "kind": "beacon"
    },
    {
      "address": "0x8f86403A4DE0BB5791fa46B8e795C547942fE4Cf",
      "txHash": "0xe64bc6160998dbbc0720b425739fe60726e08f1a5b9d3a6201110b624c811420",
      "kind": "beacon"
    },
    {
      "address": "0x5eb3Bc0a489C5A8288765d2336659EbCA68FCd00",
      "txHash": "0xb0b068349c9f05c7faa6396db632c38778215d4c5f6932e9bf162c92386fe332",
      "kind": "beacon"
    },
    {
      "address": "0xB0D4afd8879eD9F52b28595d31B441D079B2Ca07",
      "txHash": "0x78b49e9649342374ed561f0cb2e5e5736802d54123347f2c59091324e37c4269",
      "kind": "beacon"
    },
    {
      "address": "0x162A433068F51e18b7d13932F27e66a3f99E6890",
      "txHash": "0xece327646867e53011c68c1147cf117d75182709ecfcc919e2926618073e438a",
      "kind": "beacon"
    },
    {
      "address": "0x5081a39b8A5f0E35a8D959395a630b68B74Dd30f",
      "txHash": "0x904520bcf959fc2600f9a14fefa9c1406002bec07da5ee1114ac5d4c15bea55e",
      "kind": "beacon"
    },
    {
      "address": "0x4EE6eCAD1c2Dae9f525404De8555724e3c35d07B",
      "txHash": "0x715291956bfbb43e6ce375f9bc203c524a455a6f745a8e00b15d8145ecd6f4c6",
      "kind": "beacon"
    },
    {
      "address": "0xBEc49fA140aCaA83533fB00A2BB19bDdd0290f25",
      "txHash": "0xa77703712348bdec15d1585d2edb5e9328340a62aa8783a951873f081493c264",
      "kind": "beacon"
    },
    {
      "address": "0x2B0d36FACD61B71CC05ab8F3D2355ec3631C0dd5",
      "txHash": "0x1bb34842152b3676359ec31a985c2a60d945a3eb4b103ff27e0395253eea7f71",
      "kind": "beacon"
    }
  ],
  "impls": {
    "e14d552bd6ab365418f3c3bb42b2ff868465ef5a8bc9e057e889c1a2278c10aa": {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0xfdfa6d4d16eda066a5f93d35ad4b4ceb380651633410e1ac3bc03481a41f6534",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_redemptions",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_struct(Redemption)6090_storage)",
            "contract": "LPTokenStorageV1",
            "src": "contracts/LPToken.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Redemption)6090_storage)": {
            "label": "mapping(address => struct LPTokenStorageV1.Redemption)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Redemption)6090_storage": {
            "label": "struct LPTokenStorageV1.Redemption",
            "members": [
              {
                "label": "pending",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "withdrawn",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "redemptionQueueTarget",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "70b71cef98ea2ac0b542d8c50170a3d0e2520f1abc2e1a256d118f458b564f6f": {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0xa8e351a3b3c9374fc0fceca7cfe7ac8a9c083d1d9f07e72c6bfa04056bc0d80c",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)53_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "VaultStorageV1",
            "src": "contracts/Vault.sol:80"
          },
          {
            "label": "_currencyToken",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(IERC20)3201",
            "contract": "VaultStorageV1",
            "src": "contracts/Vault.sol:81"
          },
          {
            "label": "_loanPriceOracle",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(ILoanPriceOracle)11798",
            "contract": "VaultStorageV1",
            "src": "contracts/Vault.sol:82"
          },
          {
            "label": "_noteAdapters",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_contract(INoteAdapter)11933)",
            "contract": "VaultStorageV1",
            "src": "contracts/Vault.sol:83"
          },
          {
            "label": "_noteTokens",
            "offset": 0,
            "slot": "255",
            "type": "t_struct(AddressSet)5790_storage",
            "contract": "VaultStorageV1",
            "src": "contracts/Vault.sol:84"
          },
          {
            "label": "_seniorLPToken",
            "offset": 0,
            "slot": "257",
            "type": "t_contract(LPToken)6351",
            "contract": "VaultStorageV1",
            "src": "contracts/Vault.sol:85"
          },
          {
            "label": "_juniorLPToken",
            "offset": 0,
            "slot": "258",
            "type": "t_contract(LPToken)6351",
            "contract": "VaultStorageV1",
            "src": "contracts/Vault.sol:86"
          },
          {
            "label": "_seniorTrancheRate",
            "offset": 0,
            "slot": "259",
            "type": "t_uint256",
            "contract": "VaultStorageV1",
            "src": "contracts/Vault.sol:95"
          },
          {
            "label": "_adminFeeRate",
            "offset": 0,
            "slot": "260",
            "type": "t_uint256",
            "contract": "VaultStorageV1",
            "src": "contracts/Vault.sol:100"
          },
          {
            "label": "_seniorTranche",
            "offset": 0,
            "slot": "261",
            "type": "t_struct(Tranche)7265_storage",
            "contract": "VaultStorageV1",
            "src": "contracts/Vault.sol:106"
          },
          {
            "label": "_juniorTranche",
            "offset": 0,
            "slot": "266",
            "type": "t_struct(Tranche)7265_storage",
            "contract": "VaultStorageV1",
            "src": "contracts/Vault.sol:107"
          },
          {
            "label": "_totalCashBalance",
            "offset": 0,
            "slot": "271",
            "type": "t_uint256",
            "contract": "VaultStorageV1",
            "src": "contracts/Vault.sol:108"
          },
          {
            "label": "_totalAdminFeeBalance",
            "offset": 0,
            "slot": "272",
            "type": "t_uint256",
            "contract": "VaultStorageV1",
            "src": "contracts/Vault.sol:110"
          },
          {
            "label": "_totalWithdrawalBalance",
            "offset": 0,
            "slot": "273",
            "type": "t_uint256",
            "contract": "VaultStorageV1",
            "src": "contracts/Vault.sol:111"
          },
          {
            "label": "_loans",
            "offset": 0,
            "slot": "274",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Loan)7287_storage))",
            "contract": "VaultStorageV1",
            "src": "contracts/Vault.sol:116"
          },
          {
            "label": "_pendingLoans",
            "offset": 0,
            "slot": "275",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "contract": "VaultStorageV1",
            "src": "contracts/Vault.sol:121"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)3201": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC721)4505": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_contract(ILoanPriceOracle)11798": {
            "label": "contract ILoanPriceOracle",
            "numberOfBytes": "20"
          },
          "t_contract(INoteAdapter)11933": {
            "label": "contract INoteAdapter",
            "numberOfBytes": "20"
          },
          "t_contract(LPToken)6351": {
            "label": "contract LPToken",
            "numberOfBytes": "20"
          },
          "t_enum(LoanStatus)7270": {
            "label": "enum VaultStorageV1.LoanStatus",
            "members": [
              "Uninitialized",
              "Active",
              "Liquidated",
              "Complete"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_contract(INoteAdapter)11933)": {
            "label": "mapping(address => contract INoteAdapter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Loan)7287_storage))": {
            "label": "mapping(address => mapping(uint256 => struct VaultStorageV1.Loan))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)53_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(uint256 => mapping(address => uint256[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Loan)7287_storage)": {
            "label": "mapping(uint256 => struct VaultStorageV1.Loan)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)5790_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5489_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Loan)7287_storage": {
            "label": "struct VaultStorageV1.Loan",
            "members": [
              {
                "label": "status",
                "type": "t_enum(LoanStatus)7270",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maturityTimeBucket",
                "type": "t_uint64",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "collateralToken",
                "type": "t_contract(IERC721)4505",
                "offset": 9,
                "slot": "0"
              },
              {
                "label": "collateralTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "purchasePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "repayment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "seniorTrancheReturn",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(RoleData)53_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)5489_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Tranche)7265_storage": {
            "label": "struct VaultStorageV1.Tranche",
            "members": [
              {
                "label": "realizedValue",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pendingRedemptions",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "redemptionQueue",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "processedRedemptionQueue",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "pendingReturns",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        }
      }
    },
    "66634802532215d750df8fdb2c1eca795487974c20bab03dbadeca16abfbf3d2": {
      "address": "0x4A679253410272dd5232B3Ff7cF5dbB88f295319",
      "txHash": "0xbfb2adcf26f0feadb431fd1c1d33f7f6549891015a8572508e1636ec38d53ed8",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_redemptions",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_struct(Redemption)6090_storage)",
            "contract": "LPTokenStorageV1",
            "src": "contracts/LPToken.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Redemption)6090_storage)": {
            "label": "mapping(address => struct LPTokenStorageV1.Redemption)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Redemption)6090_storage": {
            "label": "struct LPTokenStorageV1.Redemption",
            "members": [
              {
                "label": "pending",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "withdrawn",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "redemptionQueueTarget",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "87e52d5b88c34576ff1e7c3f30b0d937439bbc84233083f6bf406a92dc190041": {
      "address": "0x09635F643e140090A9A8Dcd712eD6285858ceBef",
      "txHash": "0x5491bb6cf8ad084d9ed6c3d1fc49f373d5e246757a6b78f1524b370d0f5ad576",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)53_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "VaultStorageV1",
            "src": "contracts/Vault.sol:80"
          },
          {
            "label": "_currencyToken",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(IERC20)3201",
            "contract": "VaultStorageV1",
            "src": "contracts/Vault.sol:81"
          },
          {
            "label": "_loanPriceOracle",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(ILoanPriceOracle)11798",
            "contract": "VaultStorageV1",
            "src": "contracts/Vault.sol:82"
          },
          {
            "label": "_noteAdapters",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_contract(INoteAdapter)11933)",
            "contract": "VaultStorageV1",
            "src": "contracts/Vault.sol:83"
          },
          {
            "label": "_noteTokens",
            "offset": 0,
            "slot": "255",
            "type": "t_struct(AddressSet)5790_storage",
            "contract": "VaultStorageV1",
            "src": "contracts/Vault.sol:84"
          },
          {
            "label": "_seniorLPToken",
            "offset": 0,
            "slot": "257",
            "type": "t_contract(LPToken)6351",
            "contract": "VaultStorageV1",
            "src": "contracts/Vault.sol:85"
          },
          {
            "label": "_juniorLPToken",
            "offset": 0,
            "slot": "258",
            "type": "t_contract(LPToken)6351",
            "contract": "VaultStorageV1",
            "src": "contracts/Vault.sol:86"
          },
          {
            "label": "_seniorTrancheRate",
            "offset": 0,
            "slot": "259",
            "type": "t_uint256",
            "contract": "VaultStorageV1",
            "src": "contracts/Vault.sol:95"
          },
          {
            "label": "_adminFeeRate",
            "offset": 0,
            "slot": "260",
            "type": "t_uint256",
            "contract": "VaultStorageV1",
            "src": "contracts/Vault.sol:100"
          },
          {
            "label": "_seniorTranche",
            "offset": 0,
            "slot": "261",
            "type": "t_struct(Tranche)7265_storage",
            "contract": "VaultStorageV1",
            "src": "contracts/Vault.sol:106"
          },
          {
            "label": "_juniorTranche",
            "offset": 0,
            "slot": "266",
            "type": "t_struct(Tranche)7265_storage",
            "contract": "VaultStorageV1",
            "src": "contracts/Vault.sol:107"
          },
          {
            "label": "_totalCashBalance",
            "offset": 0,
            "slot": "271",
            "type": "t_uint256",
            "contract": "VaultStorageV1",
            "src": "contracts/Vault.sol:108"
          },
          {
            "label": "_totalAdminFeeBalance",
            "offset": 0,
            "slot": "272",
            "type": "t_uint256",
            "contract": "VaultStorageV1",
            "src": "contracts/Vault.sol:110"
          },
          {
            "label": "_totalWithdrawalBalance",
            "offset": 0,
            "slot": "273",
            "type": "t_uint256",
            "contract": "VaultStorageV1",
            "src": "contracts/Vault.sol:111"
          },
          {
            "label": "_loans",
            "offset": 0,
            "slot": "274",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Loan)7287_storage))",
            "contract": "VaultStorageV1",
            "src": "contracts/Vault.sol:116"
          },
          {
            "label": "_pendingLoans",
            "offset": 0,
            "slot": "275",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "contract": "VaultStorageV1",
            "src": "contracts/Vault.sol:121"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)3201": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC721)4505": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_contract(ILoanPriceOracle)11798": {
            "label": "contract ILoanPriceOracle",
            "numberOfBytes": "20"
          },
          "t_contract(INoteAdapter)11933": {
            "label": "contract INoteAdapter",
            "numberOfBytes": "20"
          },
          "t_contract(LPToken)6351": {
            "label": "contract LPToken",
            "numberOfBytes": "20"
          },
          "t_enum(LoanStatus)7270": {
            "label": "enum VaultStorageV1.LoanStatus",
            "members": [
              "Uninitialized",
              "Active",
              "Liquidated",
              "Complete"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_contract(INoteAdapter)11933)": {
            "label": "mapping(address => contract INoteAdapter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Loan)7287_storage))": {
            "label": "mapping(address => mapping(uint256 => struct VaultStorageV1.Loan))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)53_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(uint256 => mapping(address => uint256[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Loan)7287_storage)": {
            "label": "mapping(uint256 => struct VaultStorageV1.Loan)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)5790_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5489_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Loan)7287_storage": {
            "label": "struct VaultStorageV1.Loan",
            "members": [
              {
                "label": "status",
                "type": "t_enum(LoanStatus)7270",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maturityTimeBucket",
                "type": "t_uint64",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "collateralToken",
                "type": "t_contract(IERC721)4505",
                "offset": 9,
                "slot": "0"
              },
              {
                "label": "collateralTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "purchasePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "repayment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "seniorTrancheReturn",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(RoleData)53_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)5489_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Tranche)7265_storage": {
            "label": "struct VaultStorageV1.Tranche",
            "members": [
              {
                "label": "realizedValue",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pendingRedemptions",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "redemptionQueue",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "processedRedemptionQueue",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "pendingReturns",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        }
      }
    }
  }
}
